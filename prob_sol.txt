Welcome to DrRacket, version 8.0 [cs].
Language: racket, with debugging; memory limit: 128 MB.
> 10
10
> (+ 5 3 4)
12
> (- 9 1)
8
> (/ 6 2)
3
> (+ (* 2 4) (- 4 6))
6
> (define a 3)
> a
3
> (define b (+ a 1))
> b
4
> (+ a b (* a b))
19
> (= a b)
#f
> (= a 3)
#t
> (if (and (> b a) (< b (* a b)))
      b
      a)
4
> (cond ((= a 4) 6)
        ((= b 4)(+ 6 7 a))
        (else 25)
        )
16
> (+ 2 (if(> b a)b a))
6
> (* (cond ((> a b) a)
           ((< a b) b)
           (else -1))
     (+ a 1))
16
> (/(+ 5 3) 2)
4
> (/(+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5))))) (* 3 (- 6 2) (- 2 7)))
-37/150
> (define (fun a b c) (-(+ (* a a) (* b b) (* c c))
                        (cond ((and (< a b)(< a c)) a)
                              ((and (< b a)(< b c)) b)
                              ((and (< c a) (< c b)) c)
                              )))
> (fun 1 2 3)
13
> (fun 3 1 2)
13
> (fun 4 5 3)
47
> (define (fun a b c) (-(+ (* a a) (* b b) (* c c))
                        (cond ((and (< a b)(< a c)) (* a a))
                              ((and (< b a)(< b c)) (* b b))
                              ((and (< c a) (< c b)) (* c c))
                              )))
> (fun 4 5 3)
41
> (define (p) (p))
> p
#<procedure:p>
> (define (test x y)
    (if (= x 0) 0 y)
    )
> (test 0 (p))
