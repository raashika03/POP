1)
myLength([], 0).
myLength([_|L], N) 
:-myLength(L, M), N is M + 1.

2)
myLast(S, [S]).
myLast(X, [ _ | T]) :- myLast(X, T), !.

3)
(i) Bread = butter
This is unifiable beacuse Bread is variable and it is instantiated to butter.

(ii) bread = butter
Not unifiable beacuse both are constants different atom.

(iii) food(bread,X) = food(Y,butter)
Unifiable.
Y = bread
X = butter

(iv) food(bread,X,butter) = food(Y,cheese,X)
Not unifiable.
because X = cheese and X = butter.

4)
rooms([room(_,5),room(_,4),room(_,3),room(_,2),room(_,1)]).
hostel(Rooms) :- rooms(Rooms),
 member(room(akash, A), Rooms), A \= 5,
 member(room(kairav, K), Rooms), K \= 1,
 member(room(milind, M), Rooms), M \= 1, M \= 5,
 member(room(piyush, P), Rooms),
 not(adjacent(M, P)), not(adjacent(M, K)),
 member(room(nites, N), Rooms), N < K,
 print_rooms(Rooms).

adjacent(X, Y) :- X =:= Y+1.
adjacent(X, Y) :- X =:= Y-1.
print_rooms([A | B]) :- write(A), nl, print_rooms(B).
print_rooms([]).